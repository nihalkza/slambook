{"version":3,"sources":["component/SlambookCreate.js","image/main_logo.png","component/ViewSlamBook.js","component/FrontPage.js","component/FillSlamBook.js","component/ViewSlams.js","component/ViewForm.js","SlamBook.js","reportWebVitals.js","index.js"],"names":["SlambookCreate","props","state","data","id","question","added","disableProceedButton","proceedModal","loader","generatedLink","isCopied","error","d","event","arr","this","pos","parseInt","target","value","checked","some","e","setState","alert","preventDefault","copyText","document","getElementById","select","setSelectionRange","execCommand","setTimeout","history","push","uName","pwd","className","style","opacity","zIndex","FormGroup","aria-label","row","map","i","FormControlLabel","control","Checkbox","color","onClick","createNewList","bind","label","labelPlacement","Button","disabled","proceedNext","variant","Dialog","maxWidth","onClose","aria-labelledby","open","class","role","type","copyLink","noValidate","autoComplete","TextField","required","fullWidth","handleSubmit","LinearProgress","React","Component","ViewSlamBook","top","src","logo","width","alt","FrontPage","to","FillSlamBook","console","log","match","params","index","data-id","ViewSlams","totalusers","users","form_id","url","ViewForm","answer","curData","formid","split","SlamBook","Fragment","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b9239474.chunk.js","sourcesContent":["import React from 'react';\r\nimport {TextField, Dialog,LinearProgress, Button,FormGroup,FormControlLabel,Checkbox }from '@material-ui/core/';\r\nclass SlambookCreate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {\r\n                    id: 0,\r\n                    question: \"My name in your phone_______ ?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 1,\r\n                    question: \"My name in your phone_______ ?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 2,\r\n                    question: \"Relation between you and me______?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 3,\r\n                    question: \"Something You like in me______?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 4,\r\n                    question: \"Something you hate in me_____?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 5,\r\n                    question: \"Words about me\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 6,\r\n                    question: \"What would be your reaction if i die_______?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 7,\r\n                    question: \"What did you feel when you first saw me______?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 8,\r\n                    question: \"A message for me_____?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 9,\r\n                    question: \"A nick name for me_______?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 10,\r\n                    question: \"A song you want to dedicate me_________?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 11,\r\n                    question: \"You do want me to put this as my status_____?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 12,\r\n                    question: \"Who is your secret crush?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 13,\r\n                    question: \"Who would you most like to talk to?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 14,\r\n                    question: \"Worst mistake?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 15,\r\n                    question: \"Worst thing that ever happened to you?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 16,\r\n                    question: \"Your dream?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 17,\r\n                    question: \"Your favorite actor or actress and why?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 18,\r\n                    question: \"What lie have you told that hurt someone?\",\r\n                    added:false\r\n                },\r\n                {\r\n                    id: 19,\r\n                    question: \"What is the most expensive thing you have stolen?\",\r\n                    added:false\r\n                },\r\n            ],\r\n            disableProceedButton:true,\r\n            proceedModal: false,\r\n            loader:false,\r\n            generatedLink:false,\r\n            isCopied:false,\r\n            error:null\r\n        }\r\n    }\r\n\r\n    createNewList(d,event){\r\n        let arr = this.state.data;\r\n        let pos = parseInt(event.target.value);\r\n        let disableProceedButton = this.state.disableProceedButton; \r\n        if(event.target.checked){\r\n            arr[pos][\"added\"] = event.target.checked;\r\n        }else{\r\n            arr[pos][\"added\"] = event.target.checked;\r\n        }\r\n        disableProceedButton = arr.some(function(e) {\r\n            return e.added == true;\r\n        });\r\n        this.setState({data:arr,disableProceedButton : !disableProceedButton});\r\n    }\r\n\r\n\r\n    proceedNext(event){\r\n        if(this.state.disableProceedButton){\r\n            alert(\"Please select at least one to Proceed !!\")\r\n        }else{\r\n            this.setState({proceedModal:true})\r\n        }\r\n    }\r\n\r\n    copyLink(event){\r\n        event.preventDefault();\r\n        var copyText = document.getElementById(\"shareableLink\");\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999)\r\n        document.execCommand(\"copy\");\r\n        this.setState({isCopied:true})\r\n        \r\n        setTimeout(()=>{\r\n            this.props.history.push(`/`)\r\n        },1500)  \r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let error = this.state.error\r\n        let uName = document.getElementById('uName').value;\r\n        let pwd = document.getElementById('pwd').value;\r\n        if(uName && pwd){\r\n            this.setState({loader:true})\r\n            //DEMO CODE Please remove during production setup\r\n            setTimeout(()=>{\r\n                this.setState({loader:false, generatedLink:\"https://demo.com/xyz\"})\r\n            },3000)    \r\n        }else{\r\n            error = \"Please create a UserName/Password\";\r\n            this.setState({error})\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { data,disableProceedButton,proceedModal,loader,generatedLink,isCopied,error } = this.state;\r\n        return (  \r\n            <div className=\"container-fluid\"> \r\n                <div className=\"row\">\r\n                    <div className=\"col-12 px-0 position-fixed text-center toplabel\">\r\n                        <p className=\"col-12 mt-2\">Create Your own SlamBook</p>\r\n                    </div>\r\n                    <div className=\"mainimage position-fixed\" style={{opacity: \"0.2\",zIndex:\"-1\"}}></div>\r\n                </div>\r\n                <div className=\"p-2 mt-5\">\r\n                    <FormGroup aria-label=\"position\" row>\r\n                    {\r\n                        (data)\r\n                        ?\r\n                            data.map((d,i)=>{\r\n                                return(\r\n                                    <div className=\"row w-100\">\r\n                                        <div className=\"col-12 px-0\">\r\n                                        <FormControlLabel\r\n                                            value={d.id}\r\n                                            control={<Checkbox color=\"primary\" onClick={this.createNewList.bind(this,d)} />}\r\n                                            label={d.question}\r\n                                            labelPlacement=\"end\"\r\n                                        />\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        :\r\n                        null\r\n                    }\r\n                    </FormGroup>\r\n                    <Button disabled={disableProceedButton} onClick={this.proceedNext.bind(this)} variant=\"contained\" color=\"secondary\" className=\"w-100 mt-2 mb-4 p-2\">\r\n                    <span className=\"h1\">Proceed</span>\r\n                </Button>\r\n                </div>\r\n                {/* Dialog Start from here */}\r\n                <Dialog maxWidth=\"md\" onClose={()=>this.setState({proceedModal:false,generatedLink:false})} aria-labelledby=\"proceed-to-share\" open={proceedModal}>\r\n                {\r\n                (generatedLink)?\r\n                <div className=\"row m-auto\">\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                        <h4 class=\"alert-heading\">Hurrey! Link Generated</h4>\r\n                        <p>\r\n                            Click on Copy and share with your colleagues.\r\n                        </p>\r\n                    </div>\r\n                    <input type=\"text\" id=\"shareableLink\" className=\"d-none\" value={generatedLink} />\r\n                    <span className=\"h2\">{generatedLink}</span>\r\n                    <div className=\" mt-3\">\r\n                        <div className=\"m-auto col-12\">\r\n                            <Button onClick={this.copyLink.bind(this)} variant=\"contained\" color=\"primary\" className=\"w-100 mt-2 mb-4 p-2\">\r\n                                {\r\n                                (isCopied)\r\n                                ?\r\n                                <span className=\"text-center w-100 m-2 p-2\">\r\n                                    Link Copied</span>\r\n                                :\r\n                                <span className=\"h2\">Copy Link</span>\r\n                                }\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div className=\"row m-auto\">\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                        <h4 class=\"alert-heading\">Final Step</h4>\r\n                        <p>\r\n                            Create a new UserName & Password. to view all your SLAMBOOK from next time. \r\n                        </p>\r\n                    </div>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <div className=\"mt-3\">\r\n                            <div className=\"m-auto col-12\">\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth=\"true\"\r\n                                    id=\"uName\"\r\n                                    label=\"Username\"\r\n                                    variant=\"filled\"\r\n                                    type=\"text\"\r\n                                    className=\"col-12\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\" mt-3\">\r\n                            <div className=\"m-auto col-12\">\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth=\"true\"\r\n                                    id=\"pwd\"\r\n                                    label=\"Password\"\r\n                                    variant=\"filled\"\r\n                                    type=\"password\"\r\n                                    className=\"w-100\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {(error)?<span className=\"text-danger p-2 px-0\">{error}</span>:null}\r\n                        <div className=\" mt-3\">\r\n                            <div className=\"m-auto col-12\">\r\n                                <Button type=\"submit\" onClick={this.handleSubmit.bind(this)} variant=\"contained\" color=\"primary\" className=\"w-100 mt-2 mb-4 p-2\">\r\n                                    {\r\n                                    (loader)\r\n                                    ?\r\n                                    <span className=\"text-center w-100 m-2 p-2\">\r\n                                        Generating\r\n                                    <LinearProgress color=\"secondary\" /></span>\r\n                                    :\r\n                                    <span className=\"h2\">Generate Link</span>\r\n                                    }\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                }\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SlambookCreate;","export default __webpack_public_path__ + \"static/media/main_logo.663cb6dc.png\";","import React from 'react';\r\nimport {TextField, Button} from '@material-ui/core/';\r\nimport logo from '../image/main_logo.png'\r\nclass ViewSlamBook extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className= \"col-12 px-0 mainimage\">\r\n                    </div>\r\n                    <div className = \"position-absolute col-12\" style={{top: '40%'}}>\r\n                        <div className=\"text-center\">\r\n                            <img src={logo} width=\"150px\" alt=\"Welcome to the Slambook\"/>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"m-auto col-10 col-sm-4\">\r\n                                <TextField\r\n                                    required\r\n                                    id=\"filled-required\"\r\n                                    label=\"Username\"\r\n                                    variant=\"filled\"\r\n                                    type=\"text\"\r\n                                    className=\"w-100\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"m-auto col-10 col-sm-4\">\r\n                                <TextField\r\n                                    required\r\n                                    id=\"filled-required\"\r\n                                    label=\"Password\"\r\n                                    variant=\"filled\"\r\n                                    type=\"password\"\r\n                                    className=\"w-100\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"m-auto col-10 col-sm-4\">\r\n                                <Button variant=\"contained\" color=\"secondary\" className=\"col-12\">Login</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ViewSlamBook;","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport logo from '../image/main_logo.png'\r\nimport { Link } from 'react-router-dom';\r\nclass FrontPage extends React.Component {\r\n    render() { \r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className= \"col-12 px-0 mainimage\">\r\n                    </div>\r\n                    <div className = \"position-absolute col-12\" style={{top: '40%'}}>\r\n                        <div className=\"text-center\">\r\n                            <img src={logo} width=\"150px\" alt=\"Welcome to the Slambook\"/>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <Link className=\"m-auto col-10 col-sm-4\" to='/SlambookCreate'>\r\n                                <Button variant=\"contained\" color=\"primary\" className=\"col-12\" >Create SlamBook</Button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <Link className=\"m-auto col-10 col-sm-4\" to='/ViewSlamBook'>\r\n                                <Button variant=\"contained\" color=\"secondary\" className=\"col-12\">View SlamBook</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FrontPage;","import React from 'react'\r\nimport {TextField, Button} from '@material-ui/core/';\r\n\r\n\r\nclass FillSlamBook extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {\r\n                    id: 0,\r\n                    question: \"My name in your phone_______ ?\",\r\n                },\r\n                {\r\n                    id: 1,\r\n                    question: \"My name in your phone_______ ?\",\r\n                },\r\n                {\r\n                    id: 2,\r\n                    question: \"Relation between you and me______?\",\r\n                },\r\n                {\r\n                    id: 3,\r\n                    question: \"Something You like in me______?\",\r\n                },\r\n                {\r\n                    id: 4,\r\n                    question: \"Something you hate in me_____?\",\r\n                },\r\n                {\r\n                    id: 5,\r\n                    question: \"Words about me\",\r\n                },\r\n                {\r\n                    id: 6,\r\n                    question: \"What would be your reaction if i die_______?\",\r\n                },\r\n                {\r\n                    id: 7,\r\n                    question: \"What did you feel when you first saw me______?\",\r\n                },\r\n                {\r\n                    id: 8,\r\n                    question: \"A message for me_____?\",\r\n                },\r\n                {\r\n                    id: 9,\r\n                    question: \"A nick name for me_______?\",\r\n                },\r\n                {\r\n                    id: 10,\r\n                    question: \"A song you want to dedicate me_________?\",\r\n                },\r\n                {\r\n                    id: 11,\r\n                    question: \"You do want me to put this as my status_____?\",\r\n                },\r\n                {\r\n                    id: 12,\r\n                    question: \"Who is your secret crush?\",\r\n                },\r\n                {\r\n                    id: 13,\r\n                    question: \"Who would you most like to talk to?\",\r\n                },\r\n                {\r\n                    id: 14,\r\n                    question: \"Worst mistake?\",\r\n                },\r\n                {\r\n                    id: 15,\r\n                    question: \"Worst thing that ever happened to you?\",\r\n                },\r\n                {\r\n                    id: 16,\r\n                    question: \"Your dream?\",\r\n                },\r\n                {\r\n                    id: 17,\r\n                    question: \"Your favorite actor or actress and why?\",\r\n                },\r\n                {\r\n                    id: 18,\r\n                    question: \"What lie have you told that hurt someone?\",\r\n                },\r\n                {\r\n                    id: 19,\r\n                    question: \"What is the most expensive thing you have stolen?\",\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.id)\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 px-0 position-fixed text-center toplabel\">\r\n                        <Button className=\"col-12\">Create Your Own SlamBook Now</Button>\r\n                    </div>\r\n                    <div className=\"mainimage position-fixed\" style={{opacity: \"0.2\"}}></div>\r\n                </div>\r\n                <div className=\"row mt-3 pt-4\">\r\n                    <div className=\"col-12\">\r\n                        {this.state.data.map((value, index)=> {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div key={\"q_\" + index} className=\"row mt-2\">\r\n                                        <div key={\"q_t\" + index} className=\"col-12 questions\">\r\n                                            {(index+ 1) + ') ' + value.question}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div key={\"a\" + index} className=\"row\">\r\n                                        <div key={\"a_t\" + index} className=\"col-12\">\r\n                                            <TextField id={\"question\"+ value.id} label=\"Your Answer\" data-id={value.id}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className=\"row mt-4 mb-3\">\r\n                        <div className=\"m-auto col-10 col-sm-4\">\r\n                            <Button variant=\"contained\" color=\"secondary\" className=\"col-12\">Submit</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FillSlamBook;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass ViewSlams extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            totalusers : [{\r\n                users: 'Ayush',\r\n                form_id: 'someUniqueId',\r\n            }, {\r\n                users: 'Nihal',\r\n                form_id: 'someUniqueId2',\r\n            }],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match);\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"table-responsive mt-2 p-1\">\r\n                <table className=\"table table-hover table-bordered table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>S.no.</th>\r\n                            <th>Person</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.totalusers.map ((value, index)=> {\r\n                            return (\r\n                                \r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td><Link to={this.props.match.url + \"/formid=\" + value.form_id}>{value.users} </Link></td>\r\n                                </tr>\r\n                                \r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ViewSlams;","import React from 'react'\r\nimport {TextField, Button} from '@material-ui/core/';\r\n\r\n\r\nclass ViewForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {\r\n                    'someUniqueId' : [{\r\n                        id: 0,\r\n                        question: \"My name in your phone_______ ?\",\r\n                        answer: 'Ayush'\r\n                    },\r\n                    {\r\n                        id: 1,\r\n                        question: \"My name in your phone_______ ?\",\r\n                        answer: 'Aking'\r\n                    }]\r\n                },\r\n                {\r\n                    'someUniqueId2' : [{\r\n                        id: 0,\r\n                        question: \"My name in your phone_______ ?\",\r\n                        answer: 'Nihal'\r\n                    },\r\n                    {\r\n                        id: 1,\r\n                        question: \"My name in your phone_______ ?\",\r\n                        answer: 'Abhishek'\r\n                    }]\r\n                }\r\n            ],\r\n            curData:'someUniqueId'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            let curData;\r\n            if (this.props.match.params.formid) {\r\n                curData = this.props.match.params.formid.split('=')[1];\r\n                this.setState({curData: curData});\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            \r\n            <div className=\"container-fluid\">\r\n                {this.state.curData != '' ?\r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 px-0 position-fixed text-center toplabel\">\r\n                                <Button className=\"col-12\">Create Your Own SlamBook Now</Button>\r\n                            </div>\r\n                            <div className=\"mainimage position-fixed\" style={{opacity: \"0.2\"}}></div>\r\n                        </div>\r\n                        <div className=\"row mt-3 pt-4\">\r\n                            <div className=\"col-12\">\r\n                                {/* {this.state.data.map((value, index) => {\r\n                                        return (\r\n                                            <div key={index}>\r\n                                                <div key={\"q_\" + index} className=\"row mt-2\">\r\n                                                    <div key={\"q_t\" + index} className=\"col-12 questions\">\r\n                                                        {(index+ 1) + ') ' + value[this.state.curData].question}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div key={\"a\" + index} className=\"row\">\r\n                                                    <div key={\"a_t\" + index} className=\"col-12\">\r\n                                                        <TextField id={\"question\"+ value[this.state.curData].id} label=\"Your Answer\" data-id={value[this.state.curData].id}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                })} */}\r\n                            </div>\r\n                            <div className=\"row mt-4 mb-3\">\r\n                                <div className=\"m-auto col-10 col-sm-4\">\r\n                                    <Button variant=\"contained\" color=\"secondary\" className=\"col-12\">Submit</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ViewForm;","import React from 'react';\r\nimport './App.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SlambookCreate from './component/SlambookCreate';\r\nimport ViewSlamBook  from './component/ViewSlamBook';\r\nimport FrontPage from './component/FrontPage';\r\nimport FillSlamBook from './component/FillSlamBook';\r\nimport ViewSlams from './component/ViewSlams';\r\nimport ViewForm from './component/ViewForm';\r\n\r\n\r\nclass SlamBook extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n                <Switch>\r\n                    <Route exact path='/' component={FrontPage} />\r\n                    <Route exact path='/SlambookCreate' component={SlambookCreate} />\r\n                    <Route exact path='/ViewSlamBook' component={ViewSlamBook} />\r\n                    <Route exact path=\"/users/:id\" component={FillSlamBook} />\r\n                    <Route exact path=\"/ViewSlamBook/viewlist/:users\" component={ViewSlams} />\r\n                    <Route exact path=\"/ViewSlamBook/viewlist/:users/:formid\" component={ViewForm} />\r\n\r\n                </Switch>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SlamBook;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SlamBook from './SlamBook';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <SlamBook />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}